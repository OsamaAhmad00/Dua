import "SudokuSolver.dua"

int main()
{
    InputStream in;
    OutputStream out;

    SudokuSolver s( int[9] {
        int { 0, 6, 8, 0, 1, 0, 0, 4, 7 },
        int { 0, 0, 0, 0, 0, 7, 0, 0, 5 },
        int { 0, 0, 0, 0, 5, 4, 8, 6, 0 },
        int { 0, 2, 6, 0, 4, 0, 7, 0, 0 },
        int { 0, 5, 0, 0, 2, 0, 4, 3, 0 },
        int { 0, 7, 0, 8, 0, 0, 0, 0, 6 },
        int { 0, 8, 5, 0, 7, 9, 0, 0, 0 },
        int { 2, 0, 9, 5, 3, 8, 0, 7, 0 },
        int { 7, 3, 0, 1, 0, 2, 0, 5, 8 }
    });

    out << "Initial board: \n";
    s.print();

    while (true)
    {
        out << "Input the desired action:\n";
        out << "(1) set whole board\n";
        out << "(2) set specific cell\n";
        out << "(3) solve current board\n";
        out << "(4) clear the board\n";
        out << "(5) exit\n";
        out << "> ";

        int choice;
        in >> choice;

        if (choice == 1) {
            out << "Enter the 81 numbers with spaces in between, row by row (0 for empty):\n";
            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    in >> s.board[i][j];
                }
            }
        } else if (choice == 2) {
            out << "Enter the row, the column, and the target value, with a space in between (0 for empty):\n";
            int i; int j;
            in >> i >> j >> s.board[i - 1][j - 1];
        } else if (choice == 3) {
            bool solved = s.solve();
            if (!solved)
                out << "The current board configuration is not solvable...\n";

        } else if (choice == 4) {
            for (int i = 0; i < 9; i++)
                for (int j = 0; j < 9; j++)
                    s.board[i][j] = 0;
        } else if (choice == 5) {
            break;
        } else {
            out << "\n\n";
            if (in.invalid_input_error == true)
                out << "The entered choice is not a valid number\n";
            else
                out << choice << " is not a valid choice. Try again\n";
            out << "> ";
            continue;
        }

        out << "\n\nCurrent board:\n";

        s.print();
    }
}