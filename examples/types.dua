// CASE Basic integer types
// Outputs 0 0 0 0 0 0 0 0 0

int printf(str message, ...);

int main()
{
    // 64-bit integer
    i64 i_64 = 9'223'372'036'854'775'807;
    long i_64_alias = i64_alias;

    // 32-bit integer
    i32 i_32 = 2'147'483'647;
    int i_32_alias = i_32;

    // 16-bit integer
    i16 i_16 = 32'767;
    short i_16_alias = i_16;

    // 8-bit integer
    i8 i_8 = 127;
    bool i_8_alias1 = i_8;
    byte i_8_alias2 = i_8;

    // Wraps around
    i_64 += 2;  // = 0
    i_32 += 2;  // = 0
    i_16 += 2;  // = 0
    i_8  += 2;  // = 0
    i_64_alias += 2;  // = 0
    i_32_alias += 2;  // = 0
    i_16_alias += 2;  // = 0
    i_8_alias1 += 2;  // = 0
    i_8_alias2 += 2;  // = 0

    printf("%ld %d %hd %hhd ",
        i_64,
        i_32,
        i_16,
        i_8
    );

    printf("%ld %d %hd %hhd %hhd",
        i_64_alias,
        i_32_alias,
        i_16_alias,
        i_8_alias1,
        i_8_alias2,
    );
}


// CASE Basic floating-point types
// Outputs 1234.567 1234.5678 123.5678 1234.5678

int printf(str message, ...);

int main()
{
    // 64-bit float
    f64 f_64 = 1234.5678;
    double f_64_alias = f_64;

    // 32-bit float
    f32 f_32 = 1234.5678;
    float f_32_alias = f_32;

    printf("%.3f %.4f %.3f %.4f",
        f_64,
        f64_alias,
        f_32,
        f_32_alias
    );
}


// CASE Basic string type
// Outputs Hello, world!

int printf(str message, ...);

int main()
{
    str message = "Hello, world!";
    printf(message);
}