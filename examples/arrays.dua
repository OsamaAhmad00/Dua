nomangle int printf(str message, ...);


// Case Default value
// Outputs "00000"

int main()
{
    int[5] arr;

    for (int i = 0; i < 5; i++)
        printf("%d", arr[i]);
}


// Case Default value, multi-dimensional
// Outputs "000000000000000000000000"

int main()
{
    int[2][3][4] arr;

    for (int i = 0; i < 4; i++)
        for (int j = 0; j < 3; j++)
            for (int k = 0; k < 2; k++)
                printf("%d", arr[i][j][k]);
}


// Case Single-dimensional arrays
// Outputs "0123456789"

int main()
{
    int[10] arr;

    for (int i = 0; i < 10; i++)
        arr[9 - i] = i;

    for (int i = 9; i >= 0; i--)
        printf("%d", arr[i]);
}


// Case Multi-dimensional arrays
// Outputs "121236"

int main()
{
    int[10][5] arr;

    for (int i = 0; i < 5; i++)
        for (int j = 0; j < 10; j++)
            arr[i][j] = i * j;

    printf("%d%d%d", arr[3][4], arr[2][6], arr[4][9]);
}


// Case Array literals
// Outputs "12345"

int main()
{
    var arr = long { 1, 2, 3, 4, 5 };
    for (int i = 0; i < 5; i++)
        printf("%lld", arr[i]);
}


// Case Array literals with implicit cast
// Outputs "12345"

int main()
{
    var arr = int { 1.22, 2, 3S, 4, 5 };
    for (int i = 0; i < 5; i++)
        printf("%d", arr[i]);
}


// Case Passing a multi-dimensional array element by reference
// Outputs "5"

void func(int& i)
{
    i = 5;
}

int main()
{
    int[3][3] arr;
    func(arr[2][2]);
    printf("%d", arr[2][2]);
}