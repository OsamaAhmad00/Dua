nomangle int printf(str message, ...);

void print(int num) { printf("%d ", num); }

class X
{
    int a = 10;
    int b;
    long c = 55;

    void print()
    {
        printf("%d %d %lld", a, b, c);
    }
}


// Case Class declaration

class Y;

class Y
{
    int a;
    int b;

    void func() {}
}

int main()
{
    Y y;
    y.func();
}


// Case Empty class

class Y { }
int main() { }


// Case Name shadowing
// Outputs "13 14 3"

int d = 3;

class Y
{
    int d = 5;

    void print1() {
        d = 14;
        int d;
        d = 13;
        printf("%d ", d);
    }

    void print2() {
        printf("%d ", d);
    }
}

int main()
{
    Y y;
    y.print1();
    y.print2();
    printf("%d", d);
}


// Case Mutually recursive methods
// Outputs "1 2 3 4 5 "

class Z
{
    void f1(int i) {
        if (i > 1) self.f2(i - 1);
        print(i);
    }

    void f2(int i) {
        if (i > 1) self.f1(i - 1);
        print(i);
    }
}

int main()
{
    Z z;
    z.f1(4);
    print(5);
}


// Case Accessing the fields directly
// Outputs "1 2 3 4 5"

class Z
{
    var p = printf;
    var x = 3;

    void func()
    {
        p("1 2 ");
        print(x);
        self.p("4 5");
    }
}

int main()
{
    Z z;
    z.func();
}


// Case Calling methods directly
// Outputs ":5 :4 :3 :2 :1 "

class Z
{
    void space() { printf(" "); }


    void print(int i) { printf(":%d", i); }

    void p1(int i) {
        if (i <= 0) return;
        print(i);
        space();
        p2(i - 1);
    }

    void p2(int i) {
        if (i <= 0) return;
        print(i);
        space();
        p1(i - 1);
    }
}

int main()
{
    Z z;
    z.p1(5);
}


// Case Defining a type alias inside a class
// Outputs "i32"

class G
{
    typealias i = int;

    void func() {
        i x = 3;
        printf("%s", typename(x));
    }
}

int main()
{
    G g;
    g.func();
}


// Case Accessing an alias inside a class from outside
// Panics

class G
{
    typealias i = int;

    void func() {
        i x = 3;
        printf("%s", typename(x));
    }
}

int main()
{
    i x = 3;
    printf("%s", typename(x));
}


// Case Undefined field access
// Panics

int main()
{
    X x;
    x.y = 14;
    x.print();
}


// Case Nested classes
// Panics

class Y
{
    class Z
    {

    }
}

int main() { }


// Case Define class inside a function
// Panics

void function()
{
    class Z
    {

    }
}

int main() { }


// Case Redefinition of a class
// Panics

class A { }
class A { }

int main() { }


// Case Field and method with same name
// Panics

class B
{
    long l;
    int l() { return 5; }
}

int main() {}