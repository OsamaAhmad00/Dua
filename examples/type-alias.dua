no_mangle int printf(str message, ...);

void print(int num) { printf("%d", num); }



// Case Using alias types
// Outputs "i32 i64 f64"

typealias a = int;

int main()
{
    typealias b = i64;
    typealias c = double;

    a x;
    b y;
    c z;

    printf("%s %s %s", typename(x), typename(y), typename(z));
}


// Case Type alias within a class
// Outputs "i32 i64 f64"

typealias a = int;

class X
{
    typealias b = long;

    void func() {
        typealias c = double;
        printf("%s %s %s", typename(a), typename(b), typename(c));
    }

}

int main() {
    X x;
    x.func();
}


// Case Type alias sequence
// Outputs "i32 i32 i32 i32"

typealias a = int;

int main()
{
    typealias b = a;
    typealias c = b;
    typealias d = c;
    printf("%s ", typename(a));
    printf("%s ", typename(b));
    printf("%s ", typename(c));
    printf("%s", typename(d));
}


// Case Type alias shadowing
// Outputs "f64 i64"

typealias t = int;

int main()
{
    typealias t = long;
    {
        typealias t = double;
        printf("%s ", typename(t));
    }
    printf("%s", typename(t));
}


// Case Shadowing class types
// Outputs "i32"

class X {}

int main()
{
    typealias X = int;
    printf("%s", typename(X));
}


// Case Using function name as an alias
// Outputs "i32"

void func() { }

int main()
{
    typealias func = i32;
    printf("%s", typename(func));
}


// Case Shadowing in same scope 1
// Panics

class X {}

typealias X = int;

int main()
{
    printf("%s", typename(X));
}


// Case Shadowing in same scope 2
// Panics


int main()
{
    typealias X = int;
    typealias X = int;
    printf("%s", typename(X));
}


// Case Use of an alias before its definition
// Panics

int main()
{
    printf("%s", typename(x));
    typealias x = int;
}

typealias x = int;


// Case Shadowing primitive types
// Panics

int main()
{
    typealias int = long;
    printf("%s", typename(X));
}
